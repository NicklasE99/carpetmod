--- a/net/minecraft/world/World.java
+++ b/net/minecraft/world/World.java
@@ -1,5 +1,8 @@
 package net.minecraft.world;
 
+import carpet.CarpetSettings;
+import carpet.helpers.TickSpeed;
+import carpet.utils.CarpetProfiler;
 import com.google.common.base.MoreObjects;
 import com.google.common.collect.Lists;
 import it.unimi.dsi.fastutil.longs.LongSet;
@@ -242,7 +245,7 @@
         {
             Chunk chunk = this.getChunk(pos);
             Block block = newState.getBlock();
-            IBlockState iblockstate = chunk.setBlockState(pos, newState, (flags & 64) != 0);
+            IBlockState iblockstate = chunk.setBlockState(pos, newState, (flags & 64) != 0, (flags & 1024) != 0);
 
             if (iblockstate == null)
             {
@@ -281,7 +284,9 @@
                         }
                     }
 
-                    if ((flags & 16) == 0)
+                    //fillUpdates added case
+                    // if ((flags & 16) == 0)
+                    if (((flags & 16) == 0) && ((flags & 1024) == 0))
                     {
                         int i = flags & -2;
                         iblockstate.updateDiagonalNeighbors(this, pos, i);
@@ -1235,7 +1240,13 @@
                 this.weatherEffects.remove(i--);
             }
         }
+        /// CM profiler
+        int did = this.dimension.getType().getId();
+        String world_name = (did==0)?"Overworld":((did<0?"The Nether":"The End"));
+        CarpetProfiler.start_section(world_name, "Entities");
+        // end
 
+
         this.profiler.endStartSection("remove");
         this.loadedEntityList.removeAll(this.unloadedEntityList);
 
@@ -1263,6 +1274,7 @@
         for (int i1 = 0; i1 < this.loadedEntityList.size(); ++i1)
         {
             Entity entity2 = this.loadedEntityList.get(i1);
+            CarpetProfiler.start_entity_section(world_name, entity2);
             Entity entity3 = entity2.getRidingEntity();
 
             if (entity3 != null)
@@ -1277,7 +1289,8 @@
 
             this.profiler.startSection("tick");
 
-            if (!entity2.removed && !(entity2 instanceof EntityPlayerMP))
+            // [CM] Tick Freeze
+            if (!entity2.removed && !(entity2 instanceof EntityPlayerMP) && TickSpeed.process_entities)
             {
                 try
                 {
@@ -1308,10 +1321,14 @@
                 this.loadedEntityList.remove(i1--);
                 this.onEntityRemoved(entity2);
             }
+            CarpetProfiler.end_current_entity_section();
 
             this.profiler.endSection();
         }
+        CarpetProfiler.end_current_section();
+        CarpetProfiler.start_section(world_name, "Tile Entities");
 
+
         this.profiler.endStartSection("blockEntities");
 
         if (!this.tileEntitiesToBeRemoved.isEmpty())
@@ -1327,12 +1344,15 @@
         while (iterator.hasNext())
         {
             TileEntity tileentity = iterator.next();
+            CarpetProfiler.start_tileentity_section(world_name, tileentity);
 
+
             if (!tileentity.isRemoved() && tileentity.hasWorld())
             {
                 BlockPos blockpos = tileentity.getPos();
 
-                if (this.isBlockLoaded(blockpos) && this.worldBorder.contains(blockpos))
+                // [CM extra check to process entities]
+                if (this.isBlockLoaded(blockpos) && this.worldBorder.contains(blockpos) && TickSpeed.process_entities)
                 {
                     try
                     {
@@ -1363,6 +1383,7 @@
                     this.getChunk(tileentity.getPos()).removeTileEntity(tileentity.getPos());
                 }
             }
+            CarpetProfiler.end_current_entity_section();
         }
 
         this.processingLoadedTiles = false;
@@ -1393,6 +1414,7 @@
 
             this.addedTileEntityList.clear();
         }
+        CarpetProfiler.end_current_section();
 
         this.profiler.endSection();
         this.profiler.endSection();
@@ -1518,7 +1540,8 @@
                 this.getChunk(entityIn.chunkCoordX, entityIn.chunkCoordZ).removeEntityAtIndex(entityIn, entityIn.chunkCoordY);
             }
 
-            if (!entityIn.setPositionNonDirty() && !this.isChunkLoaded(l, j1, true))
+            // [CM] Faster entities can move into unloaded chunks and can get stuck in memory lagging the server. This fixes it
+            if (!CarpetSettings.getBool("unloadedEntityFix") && !entityIn.setPositionNonDirty() && !this.isChunkLoaded(l, j1, true))
             {
                 entityIn.addedToChunk = false;
             }
